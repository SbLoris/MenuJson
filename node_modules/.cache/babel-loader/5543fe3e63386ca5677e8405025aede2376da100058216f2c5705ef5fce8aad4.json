{"ast":null,"code":"import { createElementVNode as _createElementVNode, createStaticVNode as _createStaticVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"custom-number-input h-10 w-32\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createStaticVNode(\"<label for=\\\"custom-input-number\\\" class=\\\"w-full text-gray-700 text-sm font-semibold\\\">Counter Input </label><div class=\\\"flex flex-row h-10 w-full rounded-lg relative bg-transparent mt-1\\\"><button data-action=\\\"decrement\\\" class=\\\"bg-gray-300 text-gray-600 hover:text-gray-700 hover:bg-gray-400 h-full w-20 rounded-l cursor-pointer outline-none\\\"><span class=\\\"m-auto text-2xl font-thin\\\">−</span></button><input type=\\\"number\\\" class=\\\"outline-none focus:outline-none text-center w-full bg-gray-300 font-semibold text-md hover:text-black focus:text-black md:text-basecursor-default flex items-center text-gray-700 outline-none\\\" name=\\\"custom-input-number\\\" value=\\\"0\\\"><button data-action=\\\"increment\\\" class=\\\"bg-gray-300 text-gray-600 hover:text-gray-700 hover:bg-gray-400 h-full w-20 rounded-r cursor-pointer\\\"><span class=\\\"m-auto text-2xl font-thin\\\">+</span></button></div>\", 2);\nconst _hoisted_4 = [_hoisted_2];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [..._hoisted_4]);\n}","map":{"version":3,"names":["class","_hoisted_2","_createElementBlock","_hoisted_1","_hoisted_4"],"sources":["C:\\Users\\Loris\\Desktop\\Cours\\MMIInformatique\\ProjetExercice\\projet-menu\\src\\components\\nbArticlesFields.vue"],"sourcesContent":["<template>\r\n  \r\n  <div class=\"custom-number-input h-10 w-32\">\r\n  <label for=\"custom-input-number\" class=\"w-full text-gray-700 text-sm font-semibold\">Counter Input\r\n  </label>\r\n  <div class=\"flex flex-row h-10 w-full rounded-lg relative bg-transparent mt-1\">\r\n    <button data-action=\"decrement\" class=\" bg-gray-300 text-gray-600 hover:text-gray-700 hover:bg-gray-400 h-full w-20 rounded-l cursor-pointer outline-none\">\r\n      <span class=\"m-auto text-2xl font-thin\">−</span>\r\n    </button>\r\n    <input type=\"number\" class=\"outline-none focus:outline-none text-center w-full bg-gray-300 font-semibold text-md hover:text-black focus:text-black  md:text-basecursor-default flex items-center text-gray-700  outline-none\" name=\"custom-input-number\" value=\"0\">\r\n  <button data-action=\"increment\" class=\"bg-gray-300 text-gray-600 hover:text-gray-700 hover:bg-gray-400 h-full w-20 rounded-r cursor-pointer\">\r\n    <span class=\"m-auto text-2xl font-thin\">+</span>\r\n  </button>\r\n</div>\r\n  </div>\r\n</template>\r\n<style>\r\n  input[type='number']::-webkit-inner-spin-button,\r\n  input[type='number']::-webkit-outer-spin-button {\r\n    -webkit-appearance: none;\r\n    margin: 0;\r\n  }\r\n\r\n  .custom-number-input input:focus {\r\n    outline: none !important;\r\n  }\r\n\r\n  .custom-number-input button:focus {\r\n    outline: none !important;\r\n  }\r\n</style>\r\n\r\n<script>\r\n function decrement(e) {\r\n    const btn = e.target.parentNode.parentElement.querySelector(\r\n      'button[data-action=\"decrement\"]'\r\n    );\r\n    const target = btn.nextElementSibling;\r\n    let value = Number(target.value);\r\n    value--;\r\n    target.value = value;\r\n  }\r\n\r\n  function increment(e) {\r\n    const btn = e.target.parentNode.parentElement.querySelector(\r\n      'button[data-action=\"decrement\"]'\r\n    );\r\n    const target = btn.nextElementSibling;\r\n    let value = Number(target.value);\r\n    value++;\r\n    target.value = value;\r\n  }\r\n\r\n  const decrementButtons = document.querySelectorAll(\r\n    `button[data-action=\"decrement\"]`\r\n  );\r\n\r\n  const incrementButtons = document.querySelectorAll(\r\n    `button[data-action=\"increment\"]`\r\n  );\r\n\r\n  decrementButtons.forEach(btn => {\r\n    btn.addEventListener(\"click\", decrement);\r\n  });\r\n\r\n  incrementButtons.forEach(btn => {\r\n    btn.addEventListener(\"click\", increment);\r\n  });\r\n\r\nexport default {\r\n  props: {\r\n    articleCount: {\r\n      type: Number,\r\n      default: 0,\r\n    },\r\n  },\r\n  methods: {\r\n    updateArticleCount(event) {\r\n      this.$emit('updateArticleCount', Number(event.target.value));\r\n    },\r\n  },\r\n};\r\n\r\n</script>\r\n"],"mappings":";;EAEOA,KAAK,EAAC;AAA+B;;oBAC1CC,UACQ,C;;uBAFRC,mBAAA,CAYM,OAZNC,UAYM,MAAAC,UAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}